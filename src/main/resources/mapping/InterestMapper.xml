<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.whut.springbootshiro.mapper.InterestMapper" >
  <resultMap id="BaseResultMap" type="com.whut.springbootshiro.model.Interest" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="interest_name" property="interestName" jdbcType="VARCHAR" />
    <result column="describe" property="describe" jdbcType="VARCHAR" />
    <result column="cover" property="cover" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, interest_name, `describe`, cover, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from interest
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectList" resultType="com.whut.springbootshiro.model.Interest">
    select
    <include refid="Base_Column_List"/>
    from interest
    <where>
      <if test="interestName != null and interestName != ''">
        and interest_name like concat('%',#{interestName},'%')
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from interest
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.whut.springbootshiro.model.Interest" >
    insert into interest (id, interest_name, describe, 
      cover, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{interestName,jdbcType=VARCHAR}, #{describe,jdbcType=VARCHAR}, 
      #{cover,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.whut.springbootshiro.model.Interest" >
    insert into interest
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="interestName != null" >
        interest_name,
      </if>
      <if test="describe != null" >
        `describe`,
      </if>
      <if test="cover != null" >
        cover,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="interestName != null" >
        #{interestName,jdbcType=VARCHAR},
      </if>
      <if test="describe != null" >
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.whut.springbootshiro.model.Interest" >
    update interest
    <set >
      <if test="interestName != null" >
        interest_name = #{interestName,jdbcType=VARCHAR},
      </if>
      <if test="describe != null" >
        `describe` = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.whut.springbootshiro.model.Interest" >
    update interest
    set interest_name = #{interestName,jdbcType=VARCHAR},
      describe = #{describe,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>